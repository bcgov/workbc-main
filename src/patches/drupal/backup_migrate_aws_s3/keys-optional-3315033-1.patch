diff --git a/src/Destination/AWSS3Destination.php b/src/Destination/AWSS3Destination.php
index 62a3d4e..427fa8f 100644
--- a/src/Destination/AWSS3Destination.php
+++ b/src/Destination/AWSS3Destination.php
@@ -339,7 +339,6 @@ class AWSS3Destination extends DestinationBase implements RemoteDestinationInter
 
       // Make sure we have region selected.
       if ($aws_region = $this->confGet('s3_region')) {
-
         $aws_key = NULL;
         $aws_secret = NULL;
 
@@ -364,31 +363,28 @@ class AWSS3Destination extends DestinationBase implements RemoteDestinationInter
           }
         }
 
-        // Make sure we have both keys.
-        if ($aws_key && $aws_secret) {
+        // AWS S3 configuration.
+        $aws_config = [
+          'version' => 'latest',
+          'region' => $aws_region,
+        ];
 
-          // AWS S3 configuration.
-          $aws_config = [
-            'version' => 'latest',
-            'region' => $aws_region,
-            'credentials' => [
-              'key' => $aws_key,
-              'secret' => $aws_secret,
-            ],
+        // Set credentials.
+        if ($aws_key && $aws_secret) {
+          $aws_credentials = [
+            'key' => $aws_key,
+            'secret' => $aws_secret,
           ];
-
-          // Add in endpoint if configured.
-          if ($aws_endpoint = $this->confGet('s3_endpoint')) {
-            $aws_config['endpoint'] = $aws_endpoint;
-          }
-
-          // Set client.
-          $this->client = new S3Client($aws_config);
+          $aws_config['credentials'] = $aws_credentials;
         }
-        else {
-          $this->messenger()->addError($this->t('You must enter Secret key and Key id to use AWS S3.'));
-          $this->getLogger('backup_migrate_aws_s3')->error('You must enter Secret key and Key id to use AWS S3.');
+
+        // Add in endpoint if configured.
+        if ($aws_endpoint = $this->confGet('s3_endpoint')) {
+          $aws_config['endpoint'] = $aws_endpoint;
         }
+
+        // Set and initialize S3 client.
+        $this->client = new S3Client($aws_config);
       }
       else {
         $this->messenger()->addError($this->t('Please fill all mandatory fields to create S3 client.'));
@@ -454,7 +450,7 @@ class AWSS3Destination extends DestinationBase implements RemoteDestinationInter
           ]),
           'empty_option' => $this->t('- Select Key -'),
           'options' => $key_options,
-          'required' => TRUE,
+          'required' => FALSE,
         ];
       }
       else {
@@ -467,7 +463,7 @@ class AWSS3Destination extends DestinationBase implements RemoteDestinationInter
           ]),
           'empty_option' => $this->t('- Select Key -'),
           'options' => $key_options,
-          'required' => TRUE,
+          'required' => FALSE,
         ];
 
         // Secret key.
@@ -479,7 +475,7 @@ class AWSS3Destination extends DestinationBase implements RemoteDestinationInter
           ]),
           'empty_option' => $this->t('- Select Key -'),
           'options' => $key_options,
-          'required' => TRUE,
+          'required' => FALSE,
         ];
       }
 
