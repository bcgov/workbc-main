diff --git a/src/PostgresPgvectorClient.php b/src/PostgresPgvectorClient.php
index 08ec3db..9929aeb 100644
--- a/src/PostgresPgvectorClient.php
+++ b/src/PostgresPgvectorClient.php
@@ -310,10 +310,11 @@ class PostgresPgvectorClient {
       array: $output_fields
     );
     $outfield_fields = implode(',', $escaped_outfield_fields);
+    $alias = 'subquery';
     if (empty($filters)) {
       // CosineSimilarity requires a special query.
       if ($metric_type === VdbSimilarityMetrics::CosineSimilarity) {
-        $query = "SELECT (1-real_distance) as distance, {$outfield_fields} FROM (SELECT embedding {$metric_name} {$vectors} as real_distance, {$prepared_output_fields} FROM {$escaped_collection_name}) ORDER BY distance DESC LIMIT {$limit} OFFSET {$offset};";
+        $query = "SELECT (1-{$alias}.real_distance) as distance, {$outfield_fields} FROM (SELECT embedding {$metric_name} {$vectors} as real_distance, {$prepared_output_fields} FROM {$escaped_collection_name}) as {$alias} ORDER BY distance DESC LIMIT {$limit} OFFSET {$offset};";
       }
       else {
         $query = "SELECT embedding {$metric_name} {$vectors} as distance, {$prepared_output_fields} FROM {$escaped_collection_name} ORDER BY distance LIMIT {$limit} OFFSET {$offset};";
@@ -321,7 +322,7 @@ class PostgresPgvectorClient {
     }
     else {
       if ($metric_type === VdbSimilarityMetrics::CosineSimilarity) {
-        $query = "SELECT (1-real_distance) as distance, {$outfield_fields} FROM (SELECT embedding {$metric_name} {$vectors} as real_distance, {$prepared_output_fields} FROM {$escaped_collection_name} {$filters}) ORDER BY distance DESC LIMIT {$limit} OFFSET {$offset};";
+        $query = "SELECT (1-{$alias}.real_distance) as distance, {$outfield_fields} FROM (SELECT embedding {$metric_name} {$vectors} as real_distance, {$prepared_output_fields} FROM {$escaped_collection_name} {$filters}) as {$alias} ORDER BY distance DESC LIMIT {$limit} OFFSET {$offset};";
       }
       else {
         $query = "SELECT embedding {$metric_name} {$vectors} as distance, {$prepared_output_fields} FROM {$escaped_collection_name} {$filters} ORDER BY distance LIMIT {$limit} OFFSET {$offset};";
