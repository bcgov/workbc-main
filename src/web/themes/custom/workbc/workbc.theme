<?php

/**
 * @file
 * WorkBC theme file.
 */

use Drupal\file\Entity\File;
use Drupal\Core\Url;

/**
 * Implements hook theme_preprocess_paragraph().
 */
function workbc_preprocess_paragraph(&$variables) {
  $parent = $variables['paragraph']->getParentEntity();
  if ($parent->bundle() == 'action_cards_full_width') {
    $align = $parent->field_alignment->value;
    $list = $parent->field_action_cards->getValue();
    foreach($list as $key => $item) {
      if ($item['target_id'] == $variables['paragraph']->id()) {
        if ($key % 2 == 0) {
          $variables['full_width_image_alignment'] = $align == 'left' ? 'left' : 'right';
        }
        else {
          $variables['full_width_image_alignment'] = $align == 'left' ? 'right' : 'left';
        }
      }
    }
  }


  if ($parent->bundle() == 'action_card_feature') {
    $align = $parent->field_alignment->value;
    $list = $parent->field_action_card->getValue();
    foreach($list as $key => $item) {
      if ($item['target_id'] == $variables['paragraph']->id()) {
        if ($key % 2 == 0) {
          $variables['feature_image_alignment'] = $align == 'left' ? 'left' : 'right';
        }
        else {
          $variables['feature_image_alignment'] = $align == 'left' ? 'right' : 'left';
        }
      }
    }
  }


  // SPECIAL CASE
  // Override titles for "EducationPlannerBC" and "StudentAidBC" into images.
  if (isset($variables['paragraph']->field_title)) {
    $title = $variables['paragraph']->field_title->value;
    $image = null;
    switch ($title) {
      case 'EducationPlannerBC':
        $image = 'education-planner-bc.png';
        $width = '75%';
        break;
      case 'StudentAidBC':
        $image = 'student-aid-bc.png';
        $width = '50%';
        break;
      default:
        break;
    }
    if ($image) {
      $default_theme_name = \Drupal::config('system.theme')->get('default');
      $theme_path = \Drupal::service('extension.list.theme')->getPath($default_theme_name);
      $variables['override_image'] = [
        '#theme' => 'image',
        '#uri' => $theme_path . '/assets/images/' . $image,
        '#alt' => $title,
        '#attributes' => [
          'style' => "width:$width;"
        ]
      ];
    }
  }

  // SPECIAL CASE
  // Find parent menu item for featured topics cards.
  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
  if (isset($variables['paragraph']->field_link)) {
    $url = Url::fromUri($variables['paragraph']->field_link->uri);
    if ($url->isRouted()) {
      $params = $url->getRouteParameters();
      if (isset($params['node'])) {
        $links = $menu_link_manager->loadLinksByRoute('entity.node.canonical', array('node' => $params['node']));
        if ($links) {
          $parent_menu = reset($links)->getParent();
          if ($parent_menu) {
            $parent = $menu_link_manager->createInstance($parent_menu);
            $variables['parent_title'] = $parent->getTitle();
          }
        }
      }
    }
    else {
      $links = \Drupal::entityTypeManager()
      ->getStorage('menu_link_content')
      ->loadByProperties([
        'link.uri' => $variables['paragraph']->field_link->uri
      ]);
      if ($links) {
        $child_menu = $menu_link_manager->createInstance('menu_link_content:'.reset($links)->uuid());
        $parent_menu = $child_menu->getParent();
        if ($parent_menu) {
          $parent = $menu_link_manager->createInstance($parent_menu);
          $variables['parent_title'] = $parent->getTitle();
        }
      }
    }
    if (empty($variables['parent_title'])) {
      $variables['parent_title'] = 'WorkBC';
    }
  }
}

/**
 * Implements hook theme_suggestions_paragraph_alter().
 */
function workbc_theme_suggestions_paragraph_alter(array &$suggestions, array $variables) {

  $new_suggestions = array();
  foreach ($suggestions as $suggestion) {
    $new_suggestions[] = $suggestion . '__' . strtr($variables['elements']['#paragraph']->uuid->value, '-', '_');
    if (isset($variables['elements']['#paragraph']->field_key->value)) {    
      $new_suggestions[] = $suggestion . '__' . strtr($variables['elements']['#paragraph']->field_key->value, '-', '_');
    }
  }
  $suggestions = array_merge($suggestions, $new_suggestions);
}

/**
 * Implements hook_form_alter().
 */
function workbc_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-search-career-profiles-page-1' or $form['#id'] == 'views-exposed-form-search-site-content-page-1') {
    $form['#attributes']['class'][] = 'search-form';
  }
  if ($form_id == "views_exposed_form" && "views-exposed-form-search-site-content-page-1") {
    $form['search_api_fulltext']['#attributes']['aria-label'] = "Search";
  }
  if ($form_id == "views_exposed_form" && "views-exposed-form-search-career-profiles-page-1") {
    $form['search']['#attributes']['aria-label'] = "Search";
  }
}

/**
 * Implements hook theme_preprocess_page().
 */
function workbc_preprocess_page(&$variables) {
  // default page format
  $variables['page_format'] = "standard";
  if (isset($variables['node'])) {
    $node = $variables['node'];
    if ($node instanceof \Drupal\node\NodeInterface) {
      if ($node->bundle() == "page") {
        if ($node->hasField('field_page_format') && !$node->get('field_page_format')->isEmpty()) {
          $variables['page_format'] = $node->get("field_page_format")->getString();
        }
      }
    }
  }
}

/**
 * Implements hook theme_preprocess_node().
 */
function workbc_preprocess_node(&$variables) {
  if ($variables['node']->bundle() === "publication" && $variables['view_mode'] === "publication") {
    $config = \Drupal::config('workbc_custom.settings');
    $variables['order_form_path'] = $config->get('pathsettings.order_form');
    $media = $variables['content']['field_publication_media'][0]['#media'];
    if (!empty($media->field_media_document[0])) {
      $fid = $media->field_media_document[0]->getValue()['target_id'];
      $variables['file_link'] = File::load($fid)->createFileUrl();
    }
  }

  if ($variables['node']->bundle() === "career_profile" || $variables['node']->bundle() === "industry_profile") {
    $resources = $variables['node']->get("field_resources_reference")->referencedEntities();
    $links = [];
    foreach ($resources as $resource) {
      $link = [];
      $link['title'] = $resource->getTitle();
      $link['uri'] = Url::fromUri($resource->get("field_resource")->uri);
      $links[] = $link;
    }
    $variables['resources_links'] = $links;
  }

  $current_path = \Drupal::service('path.current')->getPath();
  $internal = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $variables['is_front'] = $internal == \Drupal::configFactory()->get('system.site')->get('page.front');
  $variables['is_contact'] = $internal == "/contact-us";
}

/**
 * Prepares "view_base_path" variables for unformatted summary view templates
 * for use with glossary All option.
 */
function workbc_preprocess_views_view_summary_unformatted(&$variables) {
  $view = $variables['view'];
  $variables['view_base_path'] = $view->getPath();
}


/**
 * Implements hook_preprocess_html().
 */
function workbc_preprocess_html(&$vars) {
  // Get the current path
  $current_path = \Drupal::service('path.current')->getPath();
  $internal = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

  // Assign it to body class
  $vars['attributes']['class'][] = str_replace("/", "", $internal);
}

/**
 * Implements hook_preprocess_menu().
 */
function workbc_preprocess_menu(&$vars) {
  if ($vars['menu_name'] === 'footer') {
    foreach ($vars['items'] as &$item) {
      if ($item['url']->isExternal()) {
        $item['attributes']
        ->setAttribute('target', '_blank')
        ->setAttribute('rel', 'noopener norefereer');
      }
    }
  }
}
