<?php

/**
 * @file
 * WorkBC theme file.
 */

use Drupal\file\Entity\File;
use Drupal\Core\Url;

/**
 * Implements hook_theme_preprocess_paragraph().
 */
function workbc_preprocess_paragraph(&$variables) {
  $parent = $variables['paragraph']->getParentEntity();
  if ($parent->bundle() == 'action_cards_full_width') {
    $align = $parent->field_alignment->value;
    $list = $parent->field_action_cards->getValue();
    foreach($list as $key => $item) {
      if ($item['target_id'] == $variables['paragraph']->id()) {
        if ($key % 2 == 0) {
          $variables['full_width_image_alignment'] = $align == 'left' ? 'left' : 'right';
        }
        else {
          $variables['full_width_image_alignment'] = $align == 'left' ? 'right' : 'left';
        }
      }
    }
  }

  if ($parent->bundle() == 'action_card_feature') {
    $align = $parent->field_alignment->value;
    $list = $parent->field_action_card->getValue();
    foreach($list as $key => $item) {
      if ($item['target_id'] == $variables['paragraph']->id()) {
        if ($key % 2 == 0) {
          $variables['feature_image_alignment'] = $align == 'left' ? 'left' : 'right';
        }
        else {
          $variables['feature_image_alignment'] = $align == 'left' ? 'right' : 'left';
        }
      }
    }
  }

  // Find parent menu item for cards with links.
  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
  if (isset($variables['paragraph']->field_link->uri)) {
    $url = Url::fromUri($variables['paragraph']->field_link->uri);
    if ($url->isRouted()) {
      $params = $url->getRouteParameters();
      if (isset($params['node'])) {
        $links = $menu_link_manager->loadLinksByRoute('entity.node.canonical', array('node' => $params['node']));
        if ($links) {
          $variables['parent_title'] = workbc_get_descendant(reset($links));
        }
      }
    }
    else {
      $links = \Drupal::entityTypeManager()
      ->getStorage('menu_link_content')
      ->loadByProperties([
        'link.uri' => $variables['paragraph']->field_link->uri
      ]);
      if ($links) {
        $child_menu = $menu_link_manager->createInstance('menu_link_content:'.reset($links)->uuid());
        $variables['parent_title'] = workbc_get_descendant($child_menu);
      }
    }
    if (empty($variables['parent_title'])) {
      $variables['parent_title'] = 'WorkBC';
    }
  }

  if ($variables['paragraph']->bundle() == "content_interactive_map") {
    $variables['region_info'] = ssotRegionInfo();  
    $paragraph = $variables['paragraph'];
    foreach ($variables['region_info'] as $key => $region) {
      if ($region['key'] == "british_columbia") {
        continue;
      }
      $field_key = substr("field_link_". $region['key'], 0, 32);
      $url = Url::fromUri($variables['paragraph']->$field_key->uri);
      $variables['region_info'][$key]['link'] = $url->toString();
    }  
  }

  if (isset($variables['paragraph']->field_color)) {
    $variables['text_color'] = $variables['paragraph']->field_color->value;
  }

  
  // SPECIAL CASE
  // Override cards for "EducationPlannerBC" and "StudentAidBC" by injecting their logos.
  if (isset($variables['paragraph']->field_key)) {
    $key = $variables['paragraph']->field_key->value;
    $image = null;
    switch ($key) {
      case 'education-planner-bc':
      case 'student-aid-bc':
      case 'find-your-path-1':
      case 'find-your-path-2':        
        $image = "$key.png";
        break;
      default:
        break;
    }
    if ($image) {
      $default_theme_name = \Drupal::config('system.theme')->get('default');
      $theme_path = \Drupal::service('extension.list.theme')->getPath($default_theme_name);
      $variables['override_image'] = [
        '#theme' => 'image',
        '#uri' => $theme_path . '/assets/images/' . $image,
        '#alt' => $variables['paragraph']->field_title->value,
      ];
    }
  }
}


function workbc_get_descendant($menu) {
  $result = "";

  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');

  $parent_menu = $menu->getParent();
  while (!empty($parent_menu)) {
    $parent = $menu_link_manager->createInstance($parent_menu);
    $result = $parent->getTitle();
    $parent_menu = $parent->getParent();
  }
  return $result;
}


/**
 * Implements hook_theme_suggestions_paragraph_alter().
 */
function workbc_theme_suggestions_paragraph_alter(array &$suggestions, array $variables) {

  $new_suggestions = array();
  foreach ($suggestions as $suggestion) {
    if (isset($variables['elements']['#paragraph']->field_key->value)) {
      $new_suggestions[] = $suggestion . '__' . strtr($variables['elements']['#paragraph']->field_key->value, '-', '_');
    }
  }
  $suggestions = array_merge($suggestions, $new_suggestions);
}

/**
 * Implements hook_form_alter().
 */
function workbc_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-search-career-profiles-page-1' or $form['#id'] == 'views-exposed-form-search-site-content-page-1') {
    $form['#attributes']['class'][] = 'search-form';
  }
  if ($form_id == "views_exposed_form" && "views-exposed-form-search-site-content-page-1") {
    $form['search_api_fulltext']['#attributes']['aria-label'] = "Search";
  }
  if ($form_id == "views_exposed_form" && "views-exposed-form-search-career-profiles-page-1") {
    $form['search']['#attributes']['aria-label'] = "Search";
  }
}

/**
 * Implements hook_theme_preprocess_page().
 */
function workbc_preprocess_page(&$variables) {
  // default page format
  $variables['page_format'] = "standard";
  if (isset($variables['node'])) {
    $node = $variables['node'];
    if ($node instanceof \Drupal\node\NodeInterface) {
      if ($node->bundle() == "page") {
        if ($node->hasField('field_page_format') && !$node->get('field_page_format')->isEmpty()) {
          $variables['page_format'] = $node->get("field_page_format")->getString();
        }
      }
    }
  }
}

/**
 * Implements hook_theme_preprocess_node().
 */
function workbc_preprocess_node(&$variables) {
  if ($variables['node']->bundle() === "publication" && $variables['view_mode'] === "publication") {
    $config = \Drupal::config('workbc_custom.settings');
    $variables['order_form_path'] = $config->get('pathsettings.order_form');
    $media = $variables['content']['field_publication_media'][0]['#media'];
    if (!empty($media->field_media_document[0])) {
      $fid = $media->field_media_document[0]->getValue()['target_id'];
      $variables['file_link'] = File::load($fid)->createFileUrl();
    }
  }

  if ($variables['node']->bundle() === "career_profile" || $variables['node']->bundle() === "industry_profile") {
    $resources = $variables['node']->get("field_resources_reference")->referencedEntities();
    $links = [];
    foreach ($resources as $resource) {
      $link = [];
      $link['title'] = $resource->getTitle();
      $link['uri'] = Url::fromUri($resource->get("field_resource")->uri);
      $links[] = $link;
    }
    $variables['resources_links'] = $links;
  }

  if ($variables['node']->bundle() === "career_profile") {
    $careers = $variables['node']->get("field_related_careers")->referencedEntities();
    $links = [];
    foreach ($careers as $career) {
      $link = [];
      $link['title'] = $career->getTitle();
      $link['noc'] = $career->get('field_noc')->value;
      $options = ['absolute' => TRUE];
      $url = \Drupal\Core\Url::fromRoute('entity.node.canonical', ['node' => $career->id()], $options);
      $link['uri'] = $url->toString();
      $links[] = $link;
    }
    $variables['related_career_links'] = $links;

  }

  if ($variables['node']->bundle() === "blog") {
    $featured = "";
    $node = $variables['node'];
    if ($node->hasField('body')) {
      if (!empty($node->get('body')->summary)){
        $featured = $node->get('body')->summary;
      }
      else {
        if ($node->hasField('field_related_topics_blurb') && !empty($node->get('field_related_topics_blurb')->value)) {
          $featured = $node->get('field_related_topics_blurb')->value;
        }
        else {
          if (!empty($node->get('body')->value)) {
            $text = strip_tags($node->get('body')->value);
            $text = \Drupal\Component\Utility\Unicode::truncate($text, 150, TRUE, TRUE);
            $featured = $text;
          }
        }
      }
    }
    $variables['featured_text'] = $featured;
  }

  // region information for interactive map
  $types = ["career_profile", "bc_profile", "region_profile", "industry_profile", "labour_market_monthly"];
  if (in_array($variables['node']->bundle(), $types)) {  
    $variables['region_info'] = ssotRegionInfo();    
  }

  $current_path = \Drupal::service('path.current')->getPath();
  $internal = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $variables['is_front'] = $internal == \Drupal::configFactory()->get('system.site')->get('page.front');
  $variables['is_contact'] = $internal == "/contact-us";
}

/**
 * Prepares "view_base_path" variables for unformatted summary view templates
 * for use with glossary All option.
 */
function workbc_preprocess_views_view_summary_unformatted(&$variables) {
  $view = $variables['view'];
  $variables['view_base_path'] = $view->getPath();
}

/**
 * Implements template_preprocess_media().
 */
function workbc_preprocess_media(&$variables) {

  $media = $variables['media'];
  $thumbnailUri = $media->get('thumbnail')->entity->getFileUri();
  if($thumbnailUri) {
    $image = [
      '#theme' => 'image_style',
      '#style_name' => '1_3_component',
      '#uri' => $thumbnailUri
    ];
    $variables['media_thumbnail'] = render($image);
    $variables['media_id'] = $media->id();
  }  
}

/**
 * Implements hook_preprocess_html().
 */
function workbc_preprocess_html(&$vars) {
  // Get the current path
  $current_path = \Drupal::service('path.current')->getPath();
  $internal = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

  // Assign it to body class
  $vars['attributes']['class'][] = str_replace("/", "", $internal);
}

/**
 * Implements hook_preprocess_menu().
 */
function workbc_preprocess_menu(&$vars) {
  if ($vars['menu_name'] === 'footer') {
    foreach ($vars['items'] as &$item) {
      if ($item['url']->isExternal()) {
        $item['attributes']
        ->setAttribute('target', '_blank')
        ->setAttribute('rel', 'noopener norefereer');
      }
    }
  }
}


/**
 * Implements hook_theme_suggestions_paragraph_alter().
 */
function workbc_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#name'])) {
    $suggestions[] = "form_element__" . str_replace('-', '_', $variables['element']['#name']);
  }
}


/**
 * Implements hook_theme_preprocess_form_element().
 */
function workbc_preprocess_form_element(&$variables) {

  if (isset($variables['element']['#name'])) {
    if ($variables['element']['#name'] == "occupational_interest") {
      $variables['occupational_interest_tooltip'] = 'Careers based on <a href="/plan-career/skills-future-workforce/characteristics#sideNavAnchorId_1" target="_blank" rel="noopener noreferrer">six interest types</a>.';
    }
  }

}


/**
 * Implements hook_preprocess_block().
 */
function workbc_preprocess_block(&$vars) {
  if ($vars['plugin_id'] === 'side_nav_block') {
    $vars['on_this_page'] = "On this page";
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      if ($node->hasField('field_language')) {
        if ($node->get('field_language')->value == "french") {
          $vars['on_this_page'] = "Sur cette page";
        }
      }
    }
  }
}


function workbc_preprocess_breadcrumb(&$variables){
  $types = ["career_profile", "industry_profile"];
  $node = \Drupal::routeMatch()->getParameter('node');
  
  $variables['save_profile_available'] = false;
  if ($node) {
    $variables['save_profile_available'] = in_array($node->bundle(), $types);
  }
}


function workbc_preprocess_views_view_field(&$variables) {

  $view = $variables['view'];
  $field = $variables['field'];
  if($view->storage->id() == "high_opportunity_occupations" && $field->field == "teer") {
    $vocabulary = 'taxonomy_term';
    $terms = \Drupal::entityTypeManager()->getStorage($vocabulary)->loadByProperties([
        'vid' => 'education',
        'field_teer' => $variables['output'],
    ]);
    $term = $terms[array_key_first($terms)];
    if ($term) {
      $variables['output'] = $term->getName();
    }
    else {
      $output = "N/A";
    }
  }
}