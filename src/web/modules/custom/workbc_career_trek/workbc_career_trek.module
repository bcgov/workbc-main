<?php
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_views_pre_view().
 */
function workbc_career_trek_preprocess_views_view(&$variables) {
  // Check if it's the view you want to target
  $view = $variables['view'];
  if ($view->id() == 'career_trek_video_library' && $view->current_display == 'block_1') {
    // Get the exposed filter input value
    $values = [];
    $filters = $view->display_handler->getOption('filters');
    if ($exposed = $view->getExposedInput()) {
      foreach ($exposed as $key => $expose) {
        if ($key == "field_skills_2") {
          foreach($expose as $row) {
            $term = Term::load($row);
            if ($term && !empty($term->getName())) {
              $values[] = $term->getName();
            }
          }
        } elseif ($key == "occupational_category_api_field") {
          foreach($expose as $exp) {
            $title = $filters['occupational_category_api_field']['group_info']['group_items'][$exp]['title'] ?? '';
            if (!empty($title)) {
              $values[] = $title;
            }
          }

        }
         elseif ($key == "minimum_education_all") {
          $title = $filters['minimum_education']['group_info']['group_items'][$expose]['title'] ?? '';
          if (!empty($title)) {
            $values[] = $title;
          }
        } elseif ($key == "regions") {
          $title = $filters['region_api_field']['group_info']['group_items'][$expose]['title'] ?? '';
          if (!empty($title)) {
            $values[] = $title;
          }
        } elseif ($key == "annual_salary") {

          if(isset($expose['value']) && !empty($expose['value']) && $exposed['annual_salary_op'] != "between") {
            $min = $expose['value'];
            $max = 140000 .  "+";
            if (!empty($min) || !empty($max)) {
              $values[] = "Salary $" . $min . " - $" . $max;
            }
          }else{
            $min = $expose['min'] ?? '';
            $max = $expose['max'] ?? '';
            if (!empty($min) || !empty($max)) {
              $values[] = "Salary $" . $min . " - $" . $max;
            }
          }
        } else {
          if (!empty($expose) && $key != "reset" && $key != "annual_salary_op") {
            $values[] = $expose;
          }
        }
      }
      $variables['search_view'] = array_filter($values);
    }
    $variables['view_title'] = $view->getTitle();
  }
}

/**
 * Implements hook_uninstall().
 */
function workbc_career_trek_uninstall() {
    // Load the entity type manager service.
    $entity_type_manager = \Drupal::entityTypeManager();

    // Load and remove paragraph items of type 'section_icons_1_3' before removing its fields and type.
    $paragraph_items = $entity_type_manager->getStorage('paragraph')->loadByProperties(['type' => 'section_icons_1_3']);
    foreach ($paragraph_items as $paragraph_item) {
      $paragraph_item->delete();
    }
    if ($paragraph_type = $entity_type_manager->getStorage('paragraphs_type')->load('section_icons_1_3')) {
      $field_definitions = $entity_type_manager->getStorage('field_config')->loadByProperties(['entity_type' => 'paragraph', 'bundle' => 'section_icons_1_3']);
      foreach ($field_definitions as $field_definition) {
        $field_definition->delete();
      }
      $paragraph_type->delete();
    }

    // Load and remove paragraph items of type 'banner_video' before deleting its fields and type.
    $paragraph_items = $entity_type_manager->getStorage('paragraph')->loadByProperties(['type' => 'banner_video']);
    foreach ($paragraph_items as $paragraph_item) {
      $paragraph_item->delete();
    }
    // Load the paragraph type 'section_icons_1_3' and remove its fields.
    if ($paragraph_type = $entity_type_manager->getStorage('paragraphs_type')->load('section_icons_1_3')) {
      $field_definitions = $entity_type_manager->getStorage('field_config')->loadByProperties(['entity_type' => 'paragraph', 'bundle' => 'section_icons_1_3']);
      foreach ($field_definitions as $field_definition) {
        $field_definition->delete();
      }
      $paragraph_type->delete();
    }

    // Load the paragraph type 'banner_video' and delete its fields.
    if ($paragraph_type = $entity_type_manager->getStorage('paragraphs_type')->load('banner_video')) {
      $field_storage_definitions = $entity_type_manager->getStorage('field_storage_config')->loadByProperties(['entity_type' => 'paragraph', 'bundle' => 'banner_video']);
      foreach ($field_storage_definitions as $field_storage_definition) {
        $field_storage_definition->delete();
      }
      $paragraph_type->delete();
    }

    // Remove views from the website.
    $views_to_remove = [
      'banner_video',
      'career_trek_video_library',
      'related_careers_videos',
    ];
    foreach ($views_to_remove as $view_id) {
      if ($view = $entity_type_manager->getStorage('view')->load($view_id)) {
        $view->delete();
      }
    }

    // Remove the simple block 'find_resources_for_educators'.
    if ($block = $entity_type_manager->getStorage('simple_block')->load('find_resources_for_educators')) {
      $block->delete();
    }

    // Remove the search API server 'solr_search'.
    if ($server = $entity_type_manager->getStorage('search_api_server')->load('solr_search')) {
      $server->delete();
    }

    // Remove the search API index 'career_profile_index'.
    if ($index = $entity_type_manager->getStorage('search_api_index')->load('career_profile_index')) {
      $index->delete();
    }
}