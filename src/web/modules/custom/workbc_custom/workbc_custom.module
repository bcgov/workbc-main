<?php

use Drupal\Core\Access\AccessResult;
use Drupal\node\NodeInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * @file
 * An example field using the Field Types API.
 */

/**
 *
 */

 function workbc_custom_theme($existing, $type, $theme, $path) {
   return [
     'related_topics_block' => [
       'variables' => [
           'related_topics' => array(
               'image' => NULL,
               'top_level_parent' => NULL,
               'title' => NULL,
               'body' => NULL,
               'action' => NULL,
           ),
       ],
     ],
     'explore_careers_block' => [
       'variables' => [
           'explore_careers' => array(
               'title' => NULL,
               'body' => NULL,
               'title_1' => NULL,
               'body_1' => NULL,
               'action_1' => NULL,
               'tooltip_1' => NULL,
               'title_2' => NULL,
               'body_2' => NULL,
               'action_2' => NULL,
           ),
       ],
     ],
     'career_events_block' => [
       'variables' => [
           'career_events' => array(
             'list' => NULL,
             'calendar' => NULL,
           ),
       ],
     ],
   ];
 }


 /**
  * Implements hook_views_data_alter().
  */
 function workbc_custom_views_data_alter(array &$data) {


   $data['node_field_data']['workbc_nodes_granular_dates'] = [
     'title' => t('WorkBC node granular date filter'),
     'filter' => [
       'title' => t('WorkBC node granular date filter'),
       'help' => t('WorkBC node granular date filter.'),
       'field' => 'title',
       'id' => 'workbc_node_granular_date_filter',
     ],
   ];

 }


 /**
  *  Hide province and city fields if country <> "CA"
  */
 function workbc_custom_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

   $form['account']['mail']['#attributes']['placeholder'] = "youremail@example.com";

   $form['field_province']['#states'] = [
     'visible' => [
       ':input[name^="field_country"]' => array('value' => 'CA'),
     ],
     'required' => [
       ':input[name^="field_country"]' => array('value' => 'CA'),
     ],
   ];

   $form['field_city']['#states'] = [
     'visible' => [
       ':input[name^="field_country"]' => array('value' => 'CA'),
     ],
   ];
   $form['field_city']['widget'][0]['value']['#states'] = [
     'required' => [
       ':input[name^="field_country"]' => array('value' => 'CA'),
     ],
   ];

   if (isset($form['field_security_question']['widget']['#options']['_none'])) {
     $form['field_security_question']['widget']['#options']['_none'] = "—Select Security Question";
   }

   if (isset($form['terms_of_use'])) {
     $text = preg_replace('/(<a.*?>).*?(<\/a>)/', '$1Terms of Use$2', $form['terms_of_use']['terms_of_use_checkbox']['#title']);
     $form['terms_of_use']['terms_of_use_checkbox']['#title'] = $text;
   }
}



/**
 *  Hide province and city fields if country <> "CA"
 */
function workbc_custom_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $form['field_province']['#states'] = [
    'visible' => [
      ':input[name^="field_country"]' => array('value' => 'CA'),
    ],
    // 'required' => [
    //   ':input[name^="field_country"]' => array('value' => 'CA'),
    // ],
  ];
  $form['field_province']['widget'][0]['value']['#states'] = [
    'required' => [
      ':input[name^="field_country"]' => array('value' => 'CA'),
    ],
  ];

  $form['field_city']['#states'] = [
    'visible' => [
      ':input[name^="field_country"]' => array('value' => 'CA'),
    ],
  ];
  $form['field_city']['widget'][0]['value']['#states'] = [
    'required' => [
      ':input[name^="field_country"]' => array('value' => 'CA'),
    ],
  ];

  if (isset($form['field_security_question']['widget']['#options']['_none'])) {
    $form['field_security_question']['widget']['#options']['_none'] = "—Select Security Question";
  }

}


/**
 *  Clear Province and City fields if selected country is not Canada
 */
function workbc_custom_user_presave(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity) {
    if ($entity->get('field_country')->value <> 'CA') {
      $entity->set('field_province', '');
      $entity->set('field_city', '');
    }
  }
}



function workbc_custom_node_access(NodeInterface $node, $op, AccountInterface $account) {

    if ($op == "update" || $op == "delete") {
      if (!$account->hasPermission("bypass content groups")) {
          $user = \Drupal\user\Entity\User::load($account->id());
          if (!isset($user->field_content_group->target_id) ||
              !isset($node->field_content_group->target_id) ||
              $user->field_content_group->target_id <> $node->field_content_group->target_id) {
            return  AccessResult::forbidden();
          }
      }
    }
  return AccessResult::neutral();
}


/*
 * This function returns true if user has content editor or content approver roles
 * and does not have global editor or global approver roles
 *
 */
function workbc_custom_in_content_group(AccountInterface $account) {
  $roles = $account->getRoles();
  if ((in_array("content_editor", $roles) || in_array("content_approver", $roles)) &&
      (!in_array("global_editor", $roles)) && (!in_array("global_approver", $roles))) {
    return true;
  }
  return false;
}
