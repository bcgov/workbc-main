name: Deploy-Prod

on:
  workflow_run:
    workflows:
      - Tag-Prod
    types:
      - completed


env:
  IMAGE_ID: ${{ secrets.AWS_ECR_URI }}

  TF_VERSION: 1.0.5
  TG_VERSION: 0.31.4
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: prod

permissions:
  id-token: write
  contents: read

jobs:
  get_workflow_conclusion:
    name: Lookup conclusion of workflow_run event
    runs-on: ubuntu-latest
    outputs:
      conclusion: ${{ fromJson(steps.get_conclusion.outputs.data).conclusion }}
    steps:
      - name: Get workflow conclusion
        id: get_conclusion
        uses: octokit/request-action@v2.1.0
        with:
          route: GET /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  cd:
    name: cd
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}


    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_USE_PROD }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.event.workflow_run.head_branch}}
          LICENSE_PLATE: ${{ secrets.MY_LICENSE_PLATE }}          
        run: terragrunt run-all apply --terragrunt-non-interactive
